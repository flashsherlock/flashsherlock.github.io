<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>data on Fei</title><link>https://flashsherlock.github.io/tags/data/</link><description>Recent content in data on Fei</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 31 Mar 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://flashsherlock.github.io/tags/data/index.xml" rel="self" type="application/rss+xml"/><item><title>3d visualizations of MRI data</title><link>https://flashsherlock.github.io/2025/03/31/3d-visualizations-of-mri-data/</link><pubDate>Mon, 31 Mar 2025 00:00:00 +0000</pubDate><guid>https://flashsherlock.github.io/2025/03/31/3d-visualizations-of-mri-data/</guid><description>1 Introduction 2 Convert nii to VTK 3 Render in 3d 4 References 1 Introduction I found 3d visualization is really useful for understanding MRI results. Here is a brief guide which is mainly based on this paper.
2 Convert nii to VTK First of all, we should convert nii files to VTK format using ITK-SNAP.
Open a main image (e.g. whole brain mask). Open a segmentation (e.g. ROIs). Export as surface mesh and select labels.</description></item><item><title>3d scatter plots in R</title><link>https://flashsherlock.github.io/2023/08/19/3d-scatter-plots-in-r/</link><pubDate>Sat, 19 Aug 2023 00:00:00 +0000</pubDate><guid>https://flashsherlock.github.io/2023/08/19/3d-scatter-plots-in-r/</guid><description>The plotly package is really useful for interactive plots. For example, we can plot the following function:
\[(x^2+\frac{9}{4}y^2+z^2-1)^3-x^2z^3-\frac{9}{200}y^2z^3=0\]
library(plotly) # function f &amp;lt;- function (x, y, z) { return ((-1 + x^2 + (9/4)*y^2 + z^2)^3 - x^2*z^3 - (9/200)*y^2*z^3) } # coordinates x &amp;lt;- seq(-1.5, 1.5, length.out = 30) y &amp;lt;- x z &amp;lt;- x # create grid grid &amp;lt;- expand.grid(x = x, y = y, z = z) # value grid$value &amp;lt;- with(grid, f(x,y,z)) # mutate roi to -1,0 or 1 according to value threshold &amp;lt;- 0.</description></item><item><title>iEEG: Localization of intracranial electrodes</title><link>https://flashsherlock.github.io/2021/01/12/ieeg-localization-of-intracranial-electrodes/</link><pubDate>Tue, 12 Jan 2021 00:00:00 +0000</pubDate><guid>https://flashsherlock.github.io/2021/01/12/ieeg-localization-of-intracranial-electrodes/</guid><description>1 Introduction 2 Overview 3 Preprocessing of MRI image 4 Preprocessing of CT image 5 Fusion of the CT with the MRI 6 Electrodes placement 7 Volume-based registration 8 Anatomical labeling 1 Introduction This is a simple tutorial for electrodes localization. For more information and examples, please refer to Fieldtrip tutorials. Matlab, SPM, and Fieldtrip are required for this procedure. After adding the directory of Fieldtrip toolbox to searching path, you need to initialize it by running the command ft_defaults as well.</description></item><item><title>Read xls files using gdata package in R</title><link>https://flashsherlock.github.io/2020/05/06/read-xls-files/</link><pubDate>Wed, 06 May 2020 00:00:00 +0000</pubDate><guid>https://flashsherlock.github.io/2020/05/06/read-xls-files/</guid><description>Openxlsx package can read xlsx files, but not xls files. To read xlsx files that contain time records for the online course videos, gdata package should be used.
filename &amp;lt;- dir(pattern = &amp;quot;*.xls&amp;quot;) results &amp;lt;- data.frame(row.names = c(&amp;quot;click_times&amp;quot;,&amp;quot;times&amp;quot;,&amp;quot;class&amp;quot;)) for (f in filename) { all_data &amp;lt;- read.xls(f) my_data &amp;lt;- subset(all_data,all_data[2]==&amp;quot;2019******005&amp;quot;,select = c(3,4)) if (nrow(my_data)) { all_data &amp;lt;- cbind(my_data,substring(f,3,5)) results &amp;lt;- rbind(results,all_data) } # extract hours minutes and seconds times &amp;lt;- strsplit(as.</description></item></channel></rss>