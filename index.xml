<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Fei</title><link>https://flashsherlock.github.io/</link><description>Recent content on Fei</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 16 Apr 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://flashsherlock.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>The same image may look different in AFNI and SPM</title><link>https://flashsherlock.github.io/2022/04/16/the-same-image-may-look-different-in-afni-and-spm/</link><pubDate>Sat, 16 Apr 2022 00:00:00 +0000</pubDate><guid>https://flashsherlock.github.io/2022/04/16/the-same-image-may-look-different-in-afni-and-spm/</guid><description>1 Introduction 2 Deal with obliquity 3 References 1 Introduction It is well known that coordinate systems adopted by different neuroimaging software are different. For example, AFNI uses RAI system (-x = Right, -y = Anterior, -z = Inferior) by default while SPM uses LPI system. However, this could not explain why the same image may look different in AFNI and SPM (or MRIcron). Obliquity is probably the real reason.</description></item><item><title>3D-print your brain</title><link>https://flashsherlock.github.io/2021/10/23/how-to-print-your-brain/</link><pubDate>Sat, 23 Oct 2021 00:00:00 +0000</pubDate><guid>https://flashsherlock.github.io/2021/10/23/how-to-print-your-brain/</guid><description>1 My little brain 2 Print your brain step-by-step 2.1 Scan your brain 2.2 Reconstruct brain surfaces 2.3 Convert and edit the surfaces 2.4 Refine the brain model and print it 3 Other related tutorials 1 My little brain In this National Day holiday, I made a 3D model of my brain and found a company on Taobao to 3D-print it. The finished product is about 10cm × 9cm × 6.</description></item><item><title>Below-chance accuracy in MVPA</title><link>https://flashsherlock.github.io/2021/09/27/below-chance-accuracy-in-mvpa/</link><pubDate>Mon, 27 Sep 2021 00:00:00 +0000</pubDate><guid>https://flashsherlock.github.io/2021/09/27/below-chance-accuracy-in-mvpa/</guid><description>Sometimes, the decoding accuracy of MVPA may lower than chance level, which is confusing. I have found several reasons that may lead to below-chance accuracy in decoding analysis.
special data structure (bias) model parameters (linear vs. non linear) cross validation methods (leave-one-out vs. k-fold) sample size (small vs. large) In short, below-chance accuracy is likely caused by data structure and decoding methods, which can not be simply interpreted as anti-learning.</description></item><item><title>ggplot2: Extending ggplot2</title><link>https://flashsherlock.github.io/2021/04/05/ggplot2-extending-ggplot2/</link><pubDate>Mon, 05 Apr 2021 00:00:00 +0000</pubDate><guid>https://flashsherlock.github.io/2021/04/05/ggplot2-extending-ggplot2/</guid><description>1 Programming with ggplot2 1.1 Single components 1.2 Multiple components 1.3 Plot functions 1.4 Functional programming 2 ggplot2 internals 2.1 The plot() method 2.2 The build step 2.3 The gtable step 2.4 Introducing ggproto 3 Writing ggplot2 extensions 3.1 New themes 3.2 New stats 3.3 New geoms 3.4 New coords 3.5 New scales 3.6 New positions 3.7 New facets 1 Programming with ggplot2 To make your code more flexible, you need to reduce duplicated code by writing functions.</description></item><item><title>ggplot2: The grammar</title><link>https://flashsherlock.github.io/2021/04/02/ggplot2-the-grammar/</link><pubDate>Fri, 02 Apr 2021 00:00:00 +0000</pubDate><guid>https://flashsherlock.github.io/2021/04/02/ggplot2-the-grammar/</guid><description>1 Inroduction 2 Build a plot layer by layer 2.1 Data 2.2 Aesthetic mappings 2.3 Geoms 2.4 Stats 2.5 Position adjustments 3 Scales and guides 3.1 Scale transformation 3.2 Scale guides 3.3 Scale breaks 3.4 Legend merging and splitting 4 Coordinate systems 4.1 Linear coordinate systems 4.2 Non-linear coordinate systems 5 Faceting 5.1 Facet wrap 5.2 Facet grid 5.3 Controlling scales 5.</description></item><item><title>ggplot2: Scales</title><link>https://flashsherlock.github.io/2021/03/30/ggplot2-scales/</link><pubDate>Tue, 30 Mar 2021 00:00:00 +0000</pubDate><guid>https://flashsherlock.github.io/2021/03/30/ggplot2-scales/</guid><description>1 Introduction 2 Position scales and axes 2.1 Numeric 2.2 Date-time 2.3 Discrete 2.4 Binned 2.5 Limits 3 Color scales and legends 3.1 Continuous color scales 3.2 Discrete color scales 3.3 Alpha scales 3.4 Legends 4 Other aesthetics 4.1 Size 4.2 Shape 4.3 Line type 4.4 Manual scales 4.5 Identity scales 1 Introduction The scales toolbox divide scales into three main groups:</description></item><item><title>ggplot2: Getting started</title><link>https://flashsherlock.github.io/2021/03/29/ggplot2-getting-started/</link><pubDate>Mon, 29 Mar 2021 00:00:00 +0000</pubDate><guid>https://flashsherlock.github.io/2021/03/29/ggplot2-getting-started/</guid><description>1 Introduction 2 Getting started 2.1 Aesthetic attributes 2.2 Faceting 2.3 Plot geoms 2.4 Modifying the axes 2.5 Output 1 Introduction The book ggplot2: Elegant Graphics for Data Analysis is a good starting point for learning ggplot2, a useful R package for producing graphics. I summarized some main points and useful tips here. For more details, please refer to the online version of the book.</description></item><item><title>ggplot2: Layers</title><link>https://flashsherlock.github.io/2021/03/29/ggplot2-layers/</link><pubDate>Mon, 29 Mar 2021 00:00:00 +0000</pubDate><guid>https://flashsherlock.github.io/2021/03/29/ggplot2-layers/</guid><description>1 Introduction 2 Geoms 3 Statistical summaries 3.1 Revealing uncertainty 3.2 Weighted data 3.3 Displaying distributions 3.4 Dealing with overplotting 3.5 Statistical summaries 3.6 Surfaces 4 Annotations 4.1 Plot and axis titles 4.2 Text labels 4.3 Building custom annotations 5 Arranging plots 1 Introduction In general, there are three purposes for a layer:
To display the data. To display a statistical summary of the data.</description></item><item><title>iEEG: Localization of intracranial electrodes</title><link>https://flashsherlock.github.io/2021/01/12/ieeg-localization-of-intracranial-electrodes/</link><pubDate>Tue, 12 Jan 2021 00:00:00 +0000</pubDate><guid>https://flashsherlock.github.io/2021/01/12/ieeg-localization-of-intracranial-electrodes/</guid><description>1 Introduction 2 Overview 3 Preprocessing of MRI image 4 Preprocessing of CT image 5 Fusion of the CT with the MRI 6 Electrodes placement 7 Volume-based registration 8 Anatomical labeling 1 Introduction This is a simple tutorial for electrodes localization. For more information and examples, please refer to Fieldtrip tutorials. Matlab, SPM, and Fieldtrip are required for this procedure. After adding the directory of Fieldtrip toolbox to searching path, you need to initialize it by running the command ft_defaults as well.</description></item><item><title>fMRI: Contrast mechanisms and acquisition techniques</title><link>https://flashsherlock.github.io/2020/08/25/fmri-contrast-mechanisms-and-acquisition-techniques/</link><pubDate>Tue, 25 Aug 2020 00:00:00 +0000</pubDate><guid>https://flashsherlock.github.io/2020/08/25/fmri-contrast-mechanisms-and-acquisition-techniques/</guid><description>1 Contrast Mechanisms and Acquisition Techniques 1.1 Static Contrasts 1.1.1 Proton-density contrast 1.1.2 T1 contrast 1.1.3 T2 contrast 1.1.4 T2* contrast 1.1.5 Chemical contrast 1.2 Motion Contrasts 1.2.1 MR angiography 1.2.2 Diffusion-weighted contrast 1.2.3 Perfusion-weighted contrast 1.3 Image Acquisition Techniques 1.3.1 Echo-planar imaging 1.3.2 Spiral imaging 1.3.3 Signal recovery and distortion correction for EPI and spiral images 1.3.4 Parallel imaging -- 1 Contrast Mechanisms and Acquisition Techniques Two primary types of contrast are used in MRI.</description></item><item><title>fMRI: Basic principles of image formation</title><link>https://flashsherlock.github.io/2020/08/23/fmri-basic-principles-of-image-formation/</link><pubDate>Sun, 23 Aug 2020 00:00:00 +0000</pubDate><guid>https://flashsherlock.github.io/2020/08/23/fmri-basic-principles-of-image-formation/</guid><description>1 MR Image Formation 1.1 Analysis of the MR Signal 1.1.1 Longitudinal magnetization (\(M_z\)) 1.1.2 Transverse magnetization (\(M_{xy}\)) 1.1.3 The MR signal equation 1.2 Image Reconstruction 1.2.1 Slice selection 1.2.2 Frequency and phase encoding 1.2.3 Relationship between image space and k-space 1.2.4 Converting from k-space to image space 1.3 3-D Imaging 1.4 Potential Problems in Image Formation 1.4.1 Inhomogeneity of the static magnetic field 1.4.2 nonlinearities in the gradient fields 1 MR Image Formation 1.</description></item><item><title>fMRI: Basic principles of signal generation</title><link>https://flashsherlock.github.io/2020/08/18/fmri-basic-principles-of-signal-generation/</link><pubDate>Tue, 18 Aug 2020 00:00:00 +0000</pubDate><guid>https://flashsherlock.github.io/2020/08/18/fmri-basic-principles-of-signal-generation/</guid><description>1 MR Signal Generation 1.1 Magnetic Moment 1.2 Angular Momentum 1.3 Spins in an External Magnetic Field 1.4 Energy Difference between Parallel and Antiparallel States 1.5 Magnetization of a Spin System 1.6 Excitation of a Spin System and Signal Reception 1.6.1 Spin excitation 1.6.2 Signal reception 1.7 Relaxation Mechanisms of a Spin System 1.8 The Bloch Equation for MR Signal Generation 2 Basic Principles of MR Image Formation 2.</description></item><item><title>Statistics course summary</title><link>https://flashsherlock.github.io/2020/07/21/statistics-course/</link><pubDate>Tue, 21 Jul 2020 00:00:00 +0000</pubDate><guid>https://flashsherlock.github.io/2020/07/21/statistics-course/</guid><description>1 一元统计总结 1.1 集中趋势 1.2 离散程度 1.3 偏态和峰度 1.4 相关分析 1.5 随机变量及其分布 1.6 参数估计 1.7 区间估计 1.8 假设检验 1.9 列联分析 1.10 回归分析 1 一元统计总结 1.1 集中趋势 1.1.1 百分位数 根据百分位求分数
计算指数\(i=\dfrac{m}{100}\times{n}\),不是整数i向上取整找到对应的数，是整数求i与i+1对应的数的均值。
1.1.2 百分位分数 其实就是百分位数，只是有分组的
\(P_m=L+\dfrac{\frac{m}{100}+N-F_b}{f}+i\)
\(P_m\)是第m个百分位分数 L是\(P_m\)所在组的下限 f是\(P_m\)所在组的次数 \(F_b\)是小于L的累积次数 1.1.3 百分等级分数 知道原始分数，求百分数
\(PR=\dfrac{F_b+\frac{f(P_m-L)}{i}}{N}\times{100}\)
PR是百分等级分数 L是某特定原始变量所在组的下限 f是某特定原始变量所在组的次数 \(F_b\)是小于L的累积次数 i是组距 1.2 离散程度 1.2.1 方差 \(S^2=\dfrac{\displaystyle \sum_{i=1}^n (X_i-\bar{X})^2}{n-1}=\dfrac{\displaystyle \sum_{i=1}^{n}X_i^2}{n-1}-\bar{X}^2\)
1.2.2 变异系数 \(CV_\sigma=\dfrac{\sigma}{\mu}\)</description></item><item><title>Ten rules for ERP experiments</title><link>https://flashsherlock.github.io/2020/05/18/rules-for-experiments/</link><pubDate>Mon, 18 May 2020 00:00:00 +0000</pubDate><guid>https://flashsherlock.github.io/2020/05/18/rules-for-experiments/</guid><description>Rules In the chapter &amp;ldquo;Ten Simple Rules for Designing and Interpreting ERP Experiments&amp;rdquo; of the book Event-Related Potentials: A Methods Handbook, Steven J. Luck proposed ten rules for ERP experiments.
Peaks and components are not the same thing. There is nothing special about the point at which the voltage reaches a local maximum or minimum.
It is impossible to estimate the time course or peak latency of a latent ERP component by looking at a single ERP waveform – there may be no obvious relationship between the shape of a local part of the waveform and the underlying latent components.</description></item><item><title>Read xls files using gdata package in R</title><link>https://flashsherlock.github.io/2020/05/06/read-xls-files/</link><pubDate>Wed, 06 May 2020 00:00:00 +0000</pubDate><guid>https://flashsherlock.github.io/2020/05/06/read-xls-files/</guid><description>Openxlsx package can read xlsx files, but not xls files. To read xlsx files that contain time records for the online course videos, gdata package should be used.
filename &amp;lt;- dir(pattern = &amp;quot;*.xls&amp;quot;) results &amp;lt;- data.frame(row.names = c(&amp;quot;click_times&amp;quot;,&amp;quot;times&amp;quot;,&amp;quot;class&amp;quot;)) for (f in filename) { all_data &amp;lt;- read.xls(f) my_data &amp;lt;- subset(all_data,all_data[2]==&amp;quot;2019******005&amp;quot;,select = c(3,4)) if (nrow(my_data)) { all_data &amp;lt;- cbind(my_data,substring(f,3,5)) results &amp;lt;- rbind(results,all_data) } # extract hours minutes and seconds times &amp;lt;- strsplit(as.</description></item><item><title>Demo Markdown</title><link>https://flashsherlock.github.io/2020/05/02/demo-markdown/</link><pubDate>Sat, 02 May 2020 00:00:00 +0000</pubDate><guid>https://flashsherlock.github.io/2020/05/02/demo-markdown/</guid><description>This is a post written in plain Markdown (*.md) instead of R Markdown (*.Rmd). The major differences are:
You cannot run any R code in a plain Markdown document, whereas in an R Markdown document, you can embed R code chunks (```{r}); A plain Markdown post is rendered through Blackfriday, and an R Markdown document is compiled by rmarkdown and Pandoc. There are many differences in syntax between Blackfriday&amp;rsquo;s Markdown and Pandoc&amp;rsquo;s Markdown.</description></item><item><title>Hello R Markdown</title><link>https://flashsherlock.github.io/2020/05/02/hello-r-markdown/</link><pubDate>Sat, 02 May 2020 00:00:00 +0000</pubDate><guid>https://flashsherlock.github.io/2020/05/02/hello-r-markdown/</guid><description>R Markdown This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.
You can embed an R code chunk like this:
summary(cars) ## speed dist ## Min. : 4.0 Min. : 2.00 ## 1st Qu.:12.0 1st Qu.: 26.00 ## Median :15.0 Median : 36.00 ## Mean :15.4 Mean : 42.98 ## 3rd Qu.</description></item><item><title>About</title><link>https://flashsherlock.github.io/about/</link><pubDate>Sun, 03 May 2020 00:00:00 +0000</pubDate><guid>https://flashsherlock.github.io/about/</guid><description>Me div#photo { background: url('/./about_files/logo.jpg'); background-size: contain; background-repeat: no-repeat; background-position:center; width: 95%; height: 0px; padding-top: 75%; margin-left: 2.5%; text-align: center; display: block; float: none; align: center; -webkit-transition: background-image 0.5s ease-in-out; transition: background-image 0.5s ease-in-out; box-shadow: 0px 0px 10px 20px white inset; } div#photo:hover { background: url('/./about_files/guf_small_43.jpg'); background-size:contain; background-repeat: no-repeat; background-position:center; -webkit-transition: background-image 0.5s ease-in-out; transition: background-image 0.5s ease-in-out; box-shadow: 0px 0px 10px 20px white inset; } -- -- I&amp;rsquo;m a graduate student, studying human olfaction with these nice people in Institute of Psychology, Chinese Academy of Sciences.</description></item><item><title>iGEM website class</title><link>https://flashsherlock.github.io/2017/02/01/igem-website-class/</link><pubDate>Wed, 01 Feb 2017 00:00:00 +0000</pubDate><guid>https://flashsherlock.github.io/2017/02/01/igem-website-class/</guid><description>iGEM培训 iGEM在招募阶段组织了一系列培训，包括数学建模、网页制作等。网页制作部分布置了两项寒假作业，即分别模仿简书和532的风格写两个网页。我在寒假花了几周的时间学习了写网页，完成了这两个网页，对写网页有了一些认识（不过现在忘了很多）。下面是当时的两个网页：
简书风格 532风格 虽然后来iGEM比赛的网页是信科的几位同学来写的，但学会一些网页的基础知识和技能也还是有用的，至少后来一次课的作业也用上了(目前这个网站也会用上吧)。</description></item></channel></rss>